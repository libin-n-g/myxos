/////////////////////////////TIMER INTERRUPT HANDLER//////////////////// 
alias currentPID S0;
currentPID = (PTBR - 1024) / 8;

///////////////////////////STORING CURRENT PROCESS STATE///////////////////
alias currentPCB S1;
currentPCB = READY_LIST + 32 * currentPID;
[ currentPCB + 1 ] = 1; // Set STATE to READY
[ currentPCB + 2 ] = BP;
[ currentPCB + 3 ] = SP - 1;
alias physicalSP S2;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
[ currentPCB + 4 ] = [physicalSP]; // Save IP of current process in the PCB from the stack
//set PTBR and PTLR fields of the PCB with the values in PTBR and PTLR
[ currentPCB + 5 ] = PTBR;
[ currentPCB + 6 ] = PTLR;
//save the registers R0 to R7 in the respective fields of the PCB.
[ currentPCB + 7 ] = R0;
[ currentPCB + 8 ] = R1;
[ currentPCB + 9 ] = R2;
[ currentPCB + 10 ] = R3;
[ currentPCB + 11 ] = R4;
[ currentPCB + 12 ] = R5;
[ currentPCB + 13 ] = R6; 
[ currentPCB + 14 ] = R7;

////////////////////////ROUND ROBIN SCHEDULING /////////////////////////////////
alias newPCB S3;
alias NextPID S4;
NextPID = currentPID + 1;
newPCB = READY_LIST + 32 * (NextPID);
alias counter S5;
counter = 0;
while(counter < 31) do
	 if ([ newPCB + 1 ] == 1) then
	    break;
	 endif;
	 NextPID = (NextPID + 1) % 32;
	 newPCB = READY_LIST + 32 * (NextPID);
	 counter = counter + 1;
endwhile;

/////////////////////////RESTORING STATE FOR NEXT PID///////////////////////
BP = [ newPCB + 2 ];
SP = [ newPCB + 3 ];
//set PTBR and PTLR fields of the PCB with the values in PTBR and PTLR
PTBR = [ newPCB + 5 ];
PTLR = [ newPCB + 6 ];
//save the registers R0 to R7 in the respective fields of the PCB.
R0 = [ newPCB + 7 ];
R1 = [ newPCB + 8 ];
R2 = [ newPCB + 9 ];
R3 = [ newPCB + 10 ];
R4 = [ newPCB + 11 ];
R5 = [ newPCB + 12 ];
R6 = [ newPCB + 13 ];
R7 = [ newPCB + 14 ];
SP = SP + 1;///DUE DO IP IN THE TOP OF STACK 
alias newphysicalSP S2;
newphysicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
[ newphysicalSP ] = [ newPCB + 4 ]; // Stores IP field value of PCB on the stack
[ newPCB + 1 ] = 2; // Set STATE to RUNNING
ireturn;